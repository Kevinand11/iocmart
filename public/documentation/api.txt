Supported Models & Relationships
 
1.User
i.One to one relationship(HasOne) with Store
ii.One to one relationship with(HasOne) Picture
iii.One to many relationship(HasMany) with Carts
 
2.Store
i.One to one relationship(BelongsTo) with User
ii.One to one relationship(HasOne) with Picture
iii.One to many relationship(HasMany) with Post
 
3.Post
i.One to one relationship(BelongsTo) with Store
ii.One to one relationship(BelongsTo) with Category
iii.One to many relationship(HasMany) with Picture
iv.One to many relationship(HasMany) with Order
 
4.Category
i.One to one relationship(BelongsTo) with Category(parent)
ii.One to many relationship(HasMany) with Category(subs)
iii.One to many relationships(HasMany) with Post
 
5.Picture
i.One to one(BelongsTo) morphable relationship with User, Store & Post
 
6.Order
i.One to one(BelongsTo) relationship with Post
ii.One to one(BelongsTo) relationship with Cart
 
7.Cart
i.One to one(BelongsTo) relationship with User
ii.One to many(HasMany) relationship with Orders
 
 
 
Base Routes https://api.iocmart.com
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/user	GET	-	-	Gets the authenticated user with its currently active cart, store and picture	Returns all details of this user	Yes	No	401- Unauthenticated request

/docs	GET	-	-	-	Returns this docs	No	No	-
/password	POST	-	{
 password:‘’,
 password_confirmation: ‘’
}	Updates the password of the authenticated user with the payload passed in	Returns a json object
{
 data: ‘true’
} if successful	Yes	No	401- Unauthenticated request
422- Failed validation. Invalid payload

/login	POST	-	{
 email:‘’,
 password: ‘’
}	Retrieves the token of the user with the provided email and password	Returns a json object
{
 data: token
} if successful	No	No	422- Failed validation. Invalid payload
400- Invalid login credentials

/register	POST	-	{
 name: ‘’,
 email: ‘’,
 phone:{
   phone: ‘’,
   phone_country: ‘NG’
 },
  password: ‘’,
 password_confirmation: ‘’
}	Creates a new user with the payload passed in. After it creates a token for the newly created user	Returns a json object
{
 data: token
} if successful	No	No	422- Failed validation. Invalid payload

 
 
 
Users Routes https://api.iocmart.com/users
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all users, starting from the most recently created, with their stores and pictures	Returns this paginated list	No	No	-
/	POST	-	{
 name: ‘’,
 email: ‘’,
 phone:{
   phone: ‘’,
   phone_country: ‘NG’
 },
 password: ‘’,
 password_confirmation: ‘’
}	Creates a new user with the payload provided	Returns all details of the new user	No	No	422 - Failed validation. Invalid payload
/id	GET	id - int	-	Finds the user with the parameter id, with its store and pictures	Returns all details of the found user	No	No	404- No user with such id found
/id	PUT	id - int	{
 name :‘’,
 email: ‘’,
 phone:{
 phone: ‘’,
 phone_country: ‘NG’
 }
}	Finds the user with the parameter id and updates it with payload passed in	Returns all details of the updated user 	Yes	No	401- Unauthenticated request
404-No user with such id found
422- Failed validation. Invalid payload
403- Authenticated user is not the owner of the profile or is not an admin

/id/profile	PUT	id - int	{
  image: ‘’
}	Finds the user with the parameter id and updates its profile image to the image passed in the payload	Returns a json object
{
 data: ‘true’
} if successful	Yes	No 	401- Unauthenticated request
404- No user with such id found
422- Failed validation. Invalid payload
403- Authenticated user is not the owner of the profile or is not an admin
/id	DELETE	id - int	-	Finds the user with the parameter id and deletes it, its store ,its tokens, its carts and its profile image.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401- Unauthenticated request
404- No user with such id found
422- Unsuccessful delete
403- Authenticated user is not the owner of the profile or is not an admin

 
 
Posts Routes https://api.iocmart.com/posts
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all posts, starting from the most recently created,
with their category info, their pictures and their store with the owner of the store.	Returns this paginated list	No	No	-
/	POST	-	{
 name: ‘’,
 description: ‘’,
 price: ‘’,
 category_id: ‘’,
 quantity: ‘’,
 images: []
}	Creates a new post with the payload provided under the store of the Authenticated user	Returns all details of the new post	Yes	No	401- Unauthenticated request
422 - Failed validation. Invalid payload
400-Authenticated user doesn’t have an existing store

/id	GET	id - int	-	Finds the post with the parameter id, together with its category info, its pictures and its store with the owner of the store.	Returns all details of the found post	No	No	404- No post with such id found
/id	PUT	id - int	{
 name: ‘’,
 description: ‘’,
 price: ‘’,
 category_id: ‘’,
 quantity: ‘’,
 Images: []
}	Finds the post with the parameter id and updates it with payload passed in	Returns all details of the updated post	Yes	No	401- Unauthenticated request
404- No post with such id found
422- Failed validation. Invalid payload
403- Authenticated user doesn’t own the post or is not an admin
/id	DELETE	id - int	-	Finds the post with the parameter id and deletes it and its pictures.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401- Unauthenticated request
404- No post with such id found
422- Unsuccessful delete
403- Authenticated user doesn’t own the post or is not an admin
 
 
 
Stores Routes https://api.iocmart.com/stores
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all stores, starting from the most recently created, with their owners and their logos	Returns this paginated list	No	No	-
/	POST	-	{
 name: ‘’,
 description: ‘’,
 email: ‘’,
 phone:{
   phone: ‘’,
   phone_country: ‘NG’
 },
 link: ‘’,
}	Creates a new store with the payload provided for the Authenticated user	Returns all details of the new store	Yes	No	401- Unauthenticated request
422 - Failed validation. Invalid payload
400- Authenticated user has an existing store
/id	GET	id - int	-	Finds the store with the parameter id, with its owner and logo	Returns all details of the found user	No	No	404- No user with such id found
/id	PUT	id - int	{
 name: ‘’,
 description: ‘’,
 email: ‘’,
 phone:{
   phone: ‘’,
   phone_country: ‘NG’
 },
 link: ‘’,
}	Finds the store with the parameter id and updates it with payload passed in	Returns all details of the updated store	Yes	No	401- Unauthenticated request
404- No store with such id found
422- Failed validation. Invalid payload
403 - Authenticated user doesn’t own the store or is not an admin

/id/logo	PUT	id - int	{
  image: ‘’
}	Finds the store with the parameter id and updates its logo to the image passed in the payload	Returns a json object
{
 data: ‘true’
} if successful	Yes	No 	401- Unauthenticated request
404- No store with such id found
422- Failed validation. Invalid payload
403 - Authenticated user doesn’t own the store or is not an admin


/id	DELETE	id - int	-	Finds the store with the parameter id and deletes it, all its posts and its logo.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401- Unauthenticated request
404- No store with such id found
422- Unsuccessful delete
403 - Authenticated user doesn’t own the store or is not an admin

 
 
Categories Routes https://api.iocmart.com/categories
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all categories, starting from the most recently created, with their parent and their subcategories	Returns this paginated list	No	No	-
/	POST	-	{
 name: ‘’,
 parent_id: ‘’,
}	Creates a new category with the payload provided	Returns all details of the new category	Yes	Yes	401 - Unauthenticated request
422 - Failed validation. Invalid payload
403 - Authenticated user is not an admin

/id	GET	id - int	-	Finds the category with the parameter id, with its parent and its subcategories	Returns all details of the found category	No	No	404- No category with such id found
/id	PUT	id - int	{
 name: ‘’,
 parent_id: ‘’,
}	Finds the category with the parameter id and updates it with payload passed in	Returns all details of the updated category	Yes	Yes	401- Unauthenticated request
404- No category with such id found
422- Failed validation. Invalid payload
403 - Authenticated user is not an admin

/id	DELETE	id - int	-	Finds the category with the parameter id and deletes it, all its posts and its subcategories.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	Yes	401-Unauthenticated request
422- Unsuccessful delete
404- No category with such id found
403 - Authenticated user is not an admin
 
 
 
Pictures Routes https://api.iocmart.com/pictures
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all pictures, starting from the most recently created, with what model it belongs to	Returns this paginated list	Yes	Yes	401- Unauthenticated request
403 - Authenticated user is not an admin

/	POST	-	{
 filename: ‘’,
 imageable_id: ‘’,
 imageable_type: ‘’
}	Creates a new picture with the payload provided	Returns all details of the new picture	Yes	Yes	401 - Unauthenticated request
422 - Failed validation. Invalid payload
403 - Authenticated user is not an admin

/id	GET	id - int	-	Finds the picture with the parameter id, with what model it belongs to	Returns all details of the found picture	Yes	Yes	401- Unauthenticated request
404- No picture with such id found
403 - Authenticated user is not an admin
d
/id	PUT	id - int	{
 filename: ‘’,
 imageable_id: ‘’,
 imageable_type: ‘’
}	Finds the picture with the parameter id and updates it with payload passed in	Returns all details of the updated picture	Yes	No	401- Unauthenticated request
404- No picture with such id found
422- Failed validation. Invalid payload
403 - Authenticated user is not  associated with the picture or is not an admin

/id	DELETE	id - int	-	Finds the picture with the parameter id and deletes it.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401-Unauthenticated request
422- Unsuccessful delete
404- No picture with such id found
403 - Authenticated user is not associated with the picture or is  not an admin
 
 
 
Orders Routes https://api.iocmart.com/orders
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all orders, starting from the most recently created, with the post and cart it belongs to	Returns this paginated list	Yes	Yes	401- Unauthenticated request
403 - Authenticated user is not an admin

/	POST	-	{
 post_id: ‘’,
 quantity: ‘’,
}	Creates a new order with the payload provided into the 
unchecked-out cart of the authorized user	Returns all details of the new order	Yes	No	401 - Unauthenticated request
422 - Failed validation. Invalid payload

/id	GET	id - int	-	Finds the order with the parameter id, with the cart and post it belongs to	Returns all details of the found order	Yes	No	401- Unauthenticated request
404- No order with such id found
403 - Authenticated user is not the owner of the order or is not an admin
d
/id	PUT	id - int	{
 post_id: ‘’,
 quantity: ‘’,
}	Finds the order with the parameter id and updates it with payload passed in	Returns all details of the updated order	Yes	No	401- Unauthenticated request
404- No order with such id found
422- Failed validation. Invalid payload
403 - Authenticated user is not  the owner of the order or is not an admin

/id	DELETE	id - int	-	Finds the order with the parameter id and deletes it.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401-Unauthenticated request
422- Unsuccessful delete
404- No order with such id found
403 - Authenticated user is not the owner of the order or is not an admin
 
 
 
Carts Routes https://api.iocmart.com/carts
 
Route	Method	Parameter Type	Payload	What  happens
behind	Results	Require Auth	Require
Admin	Possible Errors 
/	GET	-	-	Gets a paginated list of all the authenticated user’s carts, starting from the most recently created, with the orders they contain 	Returns this paginated list	Yes	No	401- Unauthenticated request

/	POST	-	{
 checked_out: ‘’,
 posts: [],
}	Creates a new cart for the authenticated user with the payload provided and creates new orders for all post ids in the posts array in the payload	Returns all details of the new cart	Yes	No	401 - Unauthenticated request
422 - Failed validation. Invalid payload

/id	GET	id - int	-	Finds the cart with the parameter id, with the order it contains	Returns all details of the found cart	Yes	No	401- Unauthenticated request
404- No order with such id found
403 - Authenticated user is not the owner of the cart or is not an admin
/id	PUT	id - int	{
 checked_out: ‘’,
 posts: [],
}	Finds the cart with the parameter id and updates it with payload passed in	Returns all details of the updated cart	Yes	No	401- Unauthenticated request
404- No cart with such id found
422- Failed validation. Invalid payload
403 - Authenticated user is not  the owner of the cart or is not an admin

/id	DELETE	id - int	-	Finds the cart with the parameter id and deletes it and all orders in it.	Returns a json object
{
 data: ‘true’
} if delete was successful	Yes	No	401-Unauthenticated request
422- Unsuccessful delete
404- No cart with such id found
403 - Authenticated user is not the owner of the cart or is not an admin
 
 
 
 
Errors Explained
 
401 - Unauthenticated
This is thrown when you attempt to visit a route that requires authentication without an access token. Access tokens are retrieved when you register or when you login successfully. 
This token is attached to the authorization header of the requests as so: Authorization: Bearer {{token}}.
 
404 - Not Found
This is thrown when you are attempt to visit a route that doesn’t exist or attempt to retrieve a resource that doesn’t exist with its id.
 
403 - Authorized Access
This is thrown when you attempt to perform an action without sufficient permissions. Such actions include: updating or deleting a resource that you(the authenticated user)
is not associated with. This means updating or deleting a user that is not you, or a post, store, cart etc that is not yours. Exceptions are given to admins however, 
who have the right to perform any of the above listed actions, whether theirs or not
 
422 - Validation Error
This is thrown on routes where payloads are sent along with. This indicates that the payload contains invalid or missing fields and therefore, cannot be processed by the server.
Attached in the body of this error is usually the further information on which fields failed validation and why.
Included in this docs is a full list of all validations on each resource’s payloaded routes
 
400 - Bad Request
This is a generic error thrown, when none of the above errors best describes the situation. Example includes when you try logging in with invalid credentials or when you 
try to create a store when you have one already . Attached in the body is usually further information describing the particular situation.
 
 
 
Payloads
 
Base Routes	Login	email	Is required. Must be a string and must be a valid email
		password	Is required. Must be a string
			
	Register	name	Is required. Must be a string and must have a minimum of 3 characters
		email	Is required. Must be a string and must be a valid email. Value also has to be unique in the users table
		password	Is required. Must be a string and have a minimum of 8 characters
		password_confirmation	Is required. Must be a string and must match the password field
		phone	Is required. Must be a JSON object containing the phone and phone_country keys
		phone.phone	Is required. Must be a valid international phone number
		phone.phone_country	Is required. A 2 character representation of the phone number eg NG, US, UK etc
			
	Password Update	password	Is required. Must be a string and have a minimum of 8 characters
		password_confirmation	Is required. Must be a string and must match the password field
			
			
User Routes	Create	name	Is required. Must be a string and must have a minimum of 3 characters
		email	Is required. Must be a string and must be a valid email. Value also has to be unique in the users table
		password	Is required. Must be a string and have a minimum of 8 characters
		password_confirmation	Is required. Must be a string and must match the password field
		phone	Is required. Must be a JSON object containing the phone and phone_country keys
		phone.phone	Is required. Must be a valid international phone number
		phone.phone_country	Is required. A 2 character representation of the phone number eg NG, US, UK etc
			
	Update	name	Is required. Must be a string and must have a minimum of 3 characters
		email	Is required. Must be a string and must be a valid email. Value also has to be unique in the users table
		phone	Is required. Must be a JSON object containing the phone and phone_country keys
		phone.phone	Is required. Must be a valid international phone number
		phone.phone_country	Is required. A 2 character representation of the phone number eg NG, US, UK etc
			
	Profile	image	Is required. Must be a valid Base64 image
			
			
Post Routes	Create	name	Is required. Must be a string and must have a minimum of 3 characters
		price	Is required. Must be an integer
		description	Optional. Must be a string
		quantity	Is required. Must be an integer
		category_id	Is required. Must be an integer, referring to the id of the category the post will belong to
		images	Optional. Must be a array of base64 images
			
	Update	name	Is required. Must be a string and must have a minimum of 3 characters
		price	Is required. Must be an integer
		description	Optional. Must be a string
		quantity	Is required. Must be an integer
		category_id	Is required. Must be an integer, referring to the id of the category the post will belong to
		images	Optional. Must be a array of base64 images
			
			
Store Routes	Create	name	Is required. Must be a string and must have a minimum of 3 characters
		description	Optional. Must be a string
		email	Is required. Must be a string and must be a valid email. Value also has to be unique in the stores table
		phone	Is required. Must be a JSON object containing the phone and phone_country keys
		phone.phone	Is required. Must be a valid international phone number
		phone.phone_country	Is required. A 2 character representation of the phone number eg NG, US, UK etc
		link	Optional. Must be a valid url
			
	Update	name	Is required. Must be a string and must have a minimum of 3 characters
		description	Optional. Must be a string
		email	Is required. Must be a string and must be a valid email. Value also has to be unique in the stores table
		phone	Is required. Must be a JSON object containing the phone and phone_country keys
		phone.phone	Is required. Must be a valid international phone number
		phone.phone_country	Is required. A 2 character representation of the phone number eg NG, US, UK etc
		link	Optional. Must be a valid url
			
	Logo	image	Is required. Must be a valid Base64 image
			
			
Picture Routes	Create	filename	Is required. Must be a string
		imageable_type	Is required. Must be a string. Only valid values are ‘App\User’, ‘App\Store’ and ‘App\Post’
		imageable_id	Is required. Must be a integer indicating the id of the model the picture is associated with
			
	Update	filename	Is required. Must be a string
		imageable_type	Is required. Must be a string. Only valid values are ‘App\User’, ‘App\Store’ and ‘App\Post’
		imageable_id	Is required. Must be a integer indicating the id of the model the picture is associated with
			
			
Category Routes	Create	name	Is required. Must be a string and must have a minimum of 3 characters.
Value  must also be unique in the categories table
		parent_id	Is required. Must be an integer indicating the id of the category to which this is a sub of. Passing in ‘0’ means it has no parent
			
	Update	name	Is required. Must be a string and must have a minimum of 3 characters.
Value  must also be unique in the categories table
		parent_id	Is required. Must be an integer indicating the id of the category to which this is a sub of. Passing in ‘0’ means it has no parent
			
			
Order Routes	Create	quantity	Is required. Must be an integer indicating how many of the post wants to be ordered.
		post_id	Is required. Must be an integer indicating the id of the post to be ordered.
			
	Update	quantity	Is required. Must be an integer indicating how many of the post wants to be ordered.
		post_id	Is required. Must be an integer indicating the id of the post to be ordered.
			
			
Cart Routes	Create	checked_out	Is required.Must be an integer between 0 & 1. Indicates whether the cart is to be checked_out immediately or the user is still shopping
		posts	Must be an array of JSON objects formatted as such
{ post_id: 1 }
The contents of this array is used to create orders for each post_id passed.
			
	Update	checked_out	Is required.Must be an integer between 0 & 1. Indicates whether the cart is to be checked_out immediately or the user is still shopping
		posts	Must be an array of JSON objects formatted as such
{ post_id: 1 }
The contents of this array is used to create orders for each post_id passed.
 